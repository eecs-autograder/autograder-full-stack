#! /bin/bash

if test "$#" != 1; then
    echo "Usage: $0 version"
    exit 1
fi

version=$1
release_branch=release-$(echo "$version" | sed -E "s/([0-9]+\.[0-9]+).*/\1.X/")

echo "This script will walk you through the steps to create release $version"
read -p "[Press enter to continue]"

echo "1. Create a release branch for the autograder-server submodule."
echo "  a. If this is a new calendar release, checkout the develop branch "
echo "     and create the release branch:"
echo "       cd autograder-server"
echo "       git checkout develop"
echo "       git pull"
echo "       git checkout -b $release_branch"
echo "       git push -u origin $release_branch"
echo "  b. If this is a minor/dev version for an existing calendar version,"
echo "     checkout the release-YYYY.MM.X branch for that release."
echo "       cd autograder-server"
echo "       git checkout $release_branch"
echo "       git pull"

read -p "[Press enter to continue]"

echo "2. In the autograder-server repo, trigger a workflow_dispatch event on "
echo "   the branch $release_branch with version $version"
echo "   Do this under the Actions tab on github. "
echo "   If the prompt to trigger a workflow_dispatch doesn't appear, click on "
echo "   the most recent run in the list, then use the *in-page* back link,"
echo "   NOT the browser back button."
echo "   Wait for CI to finish successfully."

read -p "[Press enter to continue]"

bump_branch="bump-submodules-$version"

echo "3. Create a release branch for the ag-client-typescript submodule."
echo "   **These steps differ slightly from step 1**"
echo "  a. If this is a new calendar release:"
echo "     - Checkout the develop branch and create the release branch:"
echo "       cd ag-website-vue/ag-client-typescript"
echo "       git checkout develop"
echo "       git pull"
echo "       git checkout -b $release_branch"
echo "       git push -u origin $release_branch"
echo "     - Update the autograder-server submodule to point to the matching release branch:"
echo "       git checkout -b $bump_branch"
echo "       git config --file=.gitmodules submodule.autograder-server.branch $release_branch"
echo "       git submodule update --remote"
echo "       git add .gitmodules autograder-server"
echo "       git commit -m \"Update submodule\""
echo "       git push -u origin $bump_branch"
echo "     - Open a PR for $bump_branch into $release_branch"
echo "  b. If this is a minor/dev version for an existing calendar version:"
echo "     - Checkout the release-YYYY.MM.X branch for that release."
echo "       cd ag-website-vue/ag-client-typescript"
echo "       git checkout $release_branch"
echo "       git pull"
echo "       git submodule update --remote"
echo "       git add autograder-server"
echo "       git commit -m \"Update submodule\""
echo "       git push -u origin $bump_branch"
echo "     - Open a PR for $bump_branch into $release_branch, merge after CI passes"

read -p "[Press enter to continue]"

echo "4. In the ag-client-typescript repo, trigger a workflow_dispatch event on "
echo "   the branch $release_branch with version $version"
echo "   Do this under the Actions tab on github. "
echo "   Wait for CI to finish successfully."

read -p "[Press enter to continue]"

echo "5. Create a release branch for the ag-website-vue submodule."
echo "   **These steps differ slightly from step 3**"
echo "  a. If this is a new calendar release:"
echo "     - Checkout the develop branch and create the release branch:"
echo "       cd ag-website-vue"
echo "       git checkout develop"
echo "       git pull"
echo "       git checkout -b $release_branch"
echo "       git push -u origin $release_branch"
echo "     - Update the ag-client-typescript and autograder-server submodules "
echo "       to point to the matching release branch:"
echo "       git checkout -b $bump_branch"
echo "       git config --file=.gitmodules submodule.ag-client-typescript.branch $release_branch"
echo "       git config --file=.gitmodules submodule.e2e_test_stack/autograder-server.branch $release_branch"
echo "       git submodule update --remote"
echo "       git add .gitmodules ag-client-typescript e2e_test_stack/autograder-server"
echo "       git commit -m \"Update submodules\""
echo "       git push -u origin $bump_branch"
echo "     - Open a PR for $bump_branch into $release_branch, merge after CI passes"
echo "  b. If this is a minor/dev version for an existing calendar version:"
echo "     - Checkout the release-YYYY.MM.X branch for that release."
echo "       cd ag-website-vue"
echo "       git checkout $release_branch"
echo "       git pull"
echo "       git submodule update --remote"
echo "       git add ag-client-typescript e2e_test_stack/autograder-server"
echo "       git commit -m \"Update submodule\""
echo "       git push -u origin $bump_branch"
echo "     - Open a PR for $bump_branch into $release_branch, merge after CI passes"

read -p "[Press enter to continue]"

echo "6. In the ag-website-vue repo, trigger a workflow_dispatch event on "
echo "   the branch $release_branch with version $version"
echo "   Do this under the Actions tab on github. "
echo "   Wait for CI to finish successfully."

read -p "[Press enter to continue]"

echo "7. Create a release branch for the ag-website-vue submodule."
echo "   **These steps differ slightly from step 5**"
echo "  a. If this is a new calendar release:"
echo "     - Checkout the develop branch and create the release branch:"
echo "       cd autograder-full-stack"
echo "       git checkout develop"
echo "       git pull"
echo "       git checkout -b $release_branch"
echo "       git push -u origin $release_branch"
echo "     - Update the ag-website-vue and autograder-server submodules "
echo "       to point to the matching release branch:"
echo "       git checkout -b $bump_branch"
echo "       git config --file=.gitmodules submodule.ag-website-vue.branch $release_branch"
echo "       git config --file=.gitmodules submodule.autograder-server.branch $release_branch"
echo "       git submodule update --remote"
echo "       git add .gitmodules ag-website-vue autograder-server"
echo "       git commit -m \"Update submodules\""
echo "       git push -u origin $bump_branch"
echo "     - Open a PR for $bump_branch into $release_branch, merge after CI passes"
echo "  b. If this is a minor/dev version for an existing calendar version:"
echo "     - Checkout the release-YYYY.MM.X branch for that release."
echo "       cd ag-website-vue"
echo "       git checkout $release_branch"
echo "       git pull"
echo "       git submodule update --remote"
echo "       git add ag-website-vue autograder-server"
echo "       git commit -m \"Update submodule\""
echo "       git push -u origin $bump_branch"
echo "     - Open a PR for $bump_branch into $release_branch, merge after CI passes"

read -p "[Press enter to continue]"

echo "8. In the autograder-full-stack repo, trigger a workflow_dispatch event on "
echo "   the branch $release_branch with version $version"
echo "   Do this under the Actions tab on github. "
echo "   Wait for CI to finish successfully."

read -p "[Press enter to continue]"

echo "9. Stable releases only: Update the latest tag":
echo "   git tag latest"
echo "   git push --tags --force"

read -p "[Press enter to continue]"

echo ""
echo "That's all!"
